pipeline {
    agent any
    
    environment {
        CONTAINER_NAME = 'xyztech'
    }
    
    tools {
        jdk 'JDK17'                
        maven 'Maven'        
    }

    stages {
        stage('Check Versions') {
            steps {
                sh 'java -version'
                sh 'mvn -version'
            }
        }
        stage('git checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/ravimanchi0321/XYZ-Technologies.git'
        }
        }
        stage('Build') {
            steps {
                sh 'mvn clean install'
            }
        }
        
        stage('docker build') {
            steps {
                sh 'docker build -t "$JOB_NAME":v1."$BUILD_ID" .'
                sh 'docker tag "$JOB_NAME":v1."$BUILD_ID" ravikumarmanchi/"$JOB_NAME":v1."$BUILD_ID"'
                sh 'docker tag "$JOB_NAME":v1."$BUILD_ID" ravikumarmanchi/"$JOB_NAME":latest'
        }
        }
        stage('docker loging and push') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker', passwordVariable: 'pswd', usernameVariable: 'docker')]) {
                sh 'docker login -u="${docker}" -p="${pswd}"'
            }
        }
        }
        
        stage('docker push') {
            steps {
                sh 'docker push ravikumarmanchi/"$JOB_NAME":v1."$BUILD_ID"'
                sh 'docker push ravikumarmanchi/"$JOB_NAME":latest'
        }
        }
        // stage('Deploy Docker Container') {
        //     steps {
        //         sh '''
        //             # Stop and remove existing container if running
        //             docker rm -f $CONTAINER_NAME || true

        //             # Run new container
        //             docker run -d --name $CONTAINER_NAME -p 8085:8080 ravikumarmanchi/"$JOB_NAME":latest
        //         '''
        //     }
        // }

        stage('DEPLOYMENT ON EKS') {
            steps {
                sh 'ansible-playbook playbooks/ansible.yaml'
                    
            }            
        } 
        
        
    }
}